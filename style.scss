// best in chrome
$total: 700; // total particles
$orb-size: 200px;
$particle-size: 3px;
$time: 14s;
$base-hue: 150; // change for diff colors (180 is nice)

html,
body {
  padding: 0;
  margin: 0;
}

.background {
  height: 100vh;
  background: rgb(10, 10, 10);
  overflow: hidden; // no scrollbars..
  position: relative;
}

.wrap {
  position: relative;
  top: 50%;
  left: 50%;
  width: 0;
  height: 0;
  transform-style: preserve-3d;
  perspective: 1000px;
  animation: rotate $time infinite linear; // rotate orb
}

@keyframes rotate {
  100% {
    transform: rotateY(360deg) rotateX(360deg);
  }
}

.c {
  position: absolute;
  width: $particle-size;
  height: $particle-size;
  border-radius: 50%;
  opacity: 0;
}

.second {
  height: 100vh;
  background: rgb(9, 9, 9);
}

.first {
  position: absolute;
  width: 100vh;
  top: 0;
  padding: 200px 200px;
}

.text {
  padding: 0px 0px 10px 5px;
  color: #dbdbdb;
}
.example_f {
  border-radius: 4px;
  background: linear-gradient(to right, #67b26b, #4ca2cb) !important;
  border: none;
  color: #ffffff;
  text-align: center;
  text-transform: uppercase;
  font-size: 22px;
  padding: 20px;
  width: 200px;
  transition: all 0.4s;
  cursor: pointer;
  margin: 5px;
}
.example_f span {
  cursor: pointer;
  display: inline-block;
  position: relative;
  transition: 0.4s;
}
.example_f span:after {
  content: "\00bb";
  position: absolute;
  opacity: 0;
  top: 0;
  right: -20px;
  transition: 0.5s;
}
.example_f:hover span {
  padding-right: 25px;
}
.example_f:hover span:after {
  opacity: 1;
  right: 0;
}

@for $i from 1 through $total {
  $z: (random(360) * 1deg); // random angle to rotateZ
  $y: (random(360) * 1deg); // random to rotateX
  $hue: ((40 / $total * $i) + $base-hue); // set hue

  .c:nth-child(#{$i}) {
    // grab the nth particle
    animation: orbit#{$i} $time infinite;
    animation-delay: ($i * 0.01s);
    background-color: hsla($hue, 100%, 50%, 1);
  }

  @keyframes orbit#{$i} {
    20% {
      opacity: 1; // fade in
    }
    30% {
      transform: rotateZ(-$z) rotateY($y) translateX($orb-size) rotateZ($z); // form orb
    }
    80% {
      transform: rotateZ(-$z) rotateY($y) translateX($orb-size) rotateZ($z); // hold orb state 30-80
      opacity: 1; // hold opacity 20-80
    }
    100% {
      transform: rotateZ(-$z) rotateY($y) translateX(($orb-size * 3))
        rotateZ($z); // translateX * 3
    }
  }
}
